{"version":3,"sources":["images/mcp_datasheet.png","images/ss.JPG","images/ss_cont1.JPG","images/ss_cont2.JPG","images/mearm_on.JPG","images/mearm_contents.JPG","images/polo1.JPG","images/keittio.JPG","images/me.jpg","reducers/projectsReducer.js","services/jokeService.js","reducers/jokeReducer.js","reducers/gameReducer.js","data/projectComponents/Ennustin.js","data/projectComponents/ADCRaspi.js","data/projectComponents/Nopeuspeli.js","data/projectComponents/Mearm.js","data/projectComponents/Lukko.js","data/projectComponents/Laatikosto.js","data/projectComponents/Taso.js","data/projects.js","components/TopMenu.js","components/Kuka.js","components/Projektit.js","components/Home.js","components/About.js","reducers/notificationReducer.js","services/gameService.js","components/Notification.js","components/Viihde.js","App.js","store.js","index.js","images/nopeuspeli.jpg","images/mcp3008.jpg","images/polo0.JPG","images/mearm.jpg","images/wp.jpg","images/laatikosto.JPG","images/taso.JPG"],"names":["module","exports","projectsReducer","state","action","type","data","axios","get","then","response","setJoke","props","dispatch","a","async","jokeService","newJoke","jokeReducer","value","joke","setStatus","gameReducer","Ennustin","Segment","padded","Header","as","Image","src","wp","size","floated","href","ADCRaspi","mcp","datasheet","Nopeuspeli","Group","nopeuspeli","ss","ss1","ss2","Mearm","mearm","mearmon","mearmcontent","Lukko","polo0","polo1","Laatikosto","laatikosto","Taso","taso","keittio","projectsList","id","name","description","img","codeUrl","content","url","myarm","TopMenu","useState","activeItem","setActiveItem","handleItemClick","e","Menu","stackable","fluid","widths","Item","Link","to","active","onClick","Icon","Kuka","me","rounded","target","rel","color","connectedProjektit","connect","projects","mappedProjects","map","p","Card","key","wrapped","ui","Content","Description","textAlign","Home","icon","About","activeIndex","setActiveIndex","Accordion","styled","Title","index","titleProps","List","notificationReducer","message","status","put","ConnectedNotification","Message","compact","positive","mapDispatchToProps","newNotification","connectedViihde","score","Button","loading","gameService","prize","next","window","localStorage","setItem","raised","initializeProjects","connectedApp","useEffect","oldScore","getItem","projectById","selector","Container","path","Projektit","exact","render","match","params","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1da5b338.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mcp_datasheet.cfe0bc25.png\";","module.exports = __webpack_public_path__ + \"static/media/ss.08d9aba0.JPG\";","module.exports = __webpack_public_path__ + \"static/media/ss_cont1.8e19b295.JPG\";","module.exports = __webpack_public_path__ + \"static/media/ss_cont2.fc6124d6.JPG\";","module.exports = __webpack_public_path__ + \"static/media/mearm_on.16e48e83.JPG\";","module.exports = __webpack_public_path__ + \"static/media/mearm_contents.d39280ee.JPG\";","module.exports = __webpack_public_path__ + \"static/media/polo1.da422af7.JPG\";","module.exports = __webpack_public_path__ + \"static/media/keittio.c008b653.JPG\";","module.exports = __webpack_public_path__ + \"static/media/me.47d49092.jpg\";","const projectsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        // case 'NEW_PROJECT':\r\n        //     return [...state, action.data]\r\n        case 'INIT_PROJECTS':\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeProjects = (projects) => {\r\n    return {\r\n        type: 'INIT_PROJECTS',\r\n        data: projects\r\n    }\r\n}\r\n\r\nexport default projectsReducer","import axios from 'axios'\r\nconst baseUrl = 'https://api.icndb.com/jokes/random'\r\n\r\nconst getRandom = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getRandom }","import jokeService from '../services/jokeService'\r\n\r\nconst jokeReducer = (state='', action) => {\r\n    switch (action.type) {\r\n        case 'SET_JOKE':\r\n            return action.data.value.joke\r\n        default:\r\n            return state\r\n    }}\r\n\r\nexport const setJoke = (props) => {\r\n    return async dispatch => {\r\n        const newJoke = await jokeService.getRandom()\r\n        dispatch({\r\n      type: 'SET_JOKE',\r\n      data: newJoke\r\n        })\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default jokeReducer","// import gameService from '../services/jokeService'\r\n\r\nconst gameReducer = (state=null, action) => {\r\n    switch (action.type) {\r\n        case 'SET_STATUS':\r\n            return action.data\r\n        default:\r\n            return state\r\n    }}\r\n\r\nexport const setStatus = (props) => {\r\n    return({\r\n      type: 'SET_STATUS',\r\n      data: props\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\nexport default gameReducer\r\n\r\n// return async dispatch => {\r\n//     const newStatus = await gameService.getStatus()\r\n//     dispatch({})","import React from 'react'\r\nimport { Header, Image, Segment } from 'semantic-ui-react'\r\nimport wp from '../../images/wp.jpg'\r\n\r\n\r\nconst Ennustin = () => {\r\n\r\nreturn (\r\n    <Segment padded='very'>\r\n        <Header as=\"h1\">Lämpötilan ennustin</Header>\r\n        <Header as=\"h3\">Iot-kurssilla toteutettu Arduino MKR1000-projekti.</Header>\r\n        <Image src={wp} size='medium' floated='left'/>\r\n        <p>Projektin tavoitteena oli toteuttaa kokonainen IoT-pipeline sekä imitoida tekoälyä. Iot:n hyödyt tulevat sen tuottaamasta datasta ja datan hydöyntmämisestä. Tässä tehty malli on karkea toteutus siihen suuntaan.</p>\r\n        <p>Tässä tuotteessa Arduino MKR1000, jossa on integroitu wifi-moduuli, hakee tietoa Openweathermapin APIsta. Arduinoon on kytketty DHT22 lämpötilasensori. Arduinolta lähetetään mitattu sekä OWM-datan Googlen Firebaseen. </p>\r\n        <p>Dataa hyödynnetään niin, että kerätään verrokkiaineistoa sekä openweathermapista että itse mitattuna parvekkeelta. Arvioidakseen parvekkeen lämpötilaa huomenna, voidaan tätä dataa sekä openweathermapin ennustetta hyödyntää ennusteessa.</p>\r\n        <p>Minulle nämä olivat ensiaskeleet sekä APIen käyttöön että asynkroniseen javascriptiin. jChart piirteli tyhjää kaaviota, joten päädyin vanhanaikaiseen XMR-pyyntöjen käyttöön. Nyttemmin toki olen tutustunut enemmän async/awaitiin. Mielenkiintoista oli myös saada yksittäisinä lähetetyt tiedot näkymään Firebasessa listana. Firebasen Realtime Databasessa (RTDB) oli kokeilun jälkeen ominaisuus, että mikäli nimi/arvoparissa nimet ovat järjestyksessä lukuja nollasta eteenpäin, tulkitsee RTDB tiedon listana. Siten indeksoimalla pystyi Arduinolta lähettämään tietoa, joka RTDB:ssä näkyy listana.</p>\r\n        <p>Mikäli ennustetta haluttaisiin tarkentaa, tulisi ottaa huomioon myös esimerkiksi auringon paiste parvekkeelle (valon määrä) sekä muutoksen nopeus. Parveke on suljettu laseilla, joten sisäpuolella oleva ilmamassa muuttaa lämpöään yleensä viiveellä ulkopuoleen verrattuna</p>\r\n        <p>Koodi ei ole mitään kaunista, eikä tässä vaiheessa osaaminen riittänyt kunnollisen backendin tekemiseen. Koodi kuitenkin ajoi asiansa, sillä visualisoidaan kerättyä dataa.</p>\r\n        <p>Koodi löytyy <a href=\"https://github.com/aapokar/weatherPredicter_Arduino\">gitHubista</a>.</p>\r\n    </Segment>\r\n)\r\n\r\n}\r\n\r\nexport default Ennustin","import React from 'react'\r\nimport { Header, Image, Segment } from 'semantic-ui-react'\r\nimport mcp from '../../images/mcp3008.jpg'\r\nimport datasheet from '../../images/mcp_datasheet.png'\r\n\r\n\r\nconst ADCRaspi = () => {\r\n        return (\r\n        <Segment padded='very'>\r\n                <Header as=\"h1\">ADC mcp3008</Header>\r\n                <Image src={mcp} size='medium' floated=\"left\" />\r\n                <Header as=\"h3\">Analogisen sensorin liittäminen Raspberry Pin digitaaliseen porttiin</Header>\r\n                <p>Dashboardin ja palvelimen Apin koodit olivat vaihto-opiskelijoiden käsialaa, joten en niitä tähän laita</p>\r\n                <p>Itse perehdyin seuraavaan kahteen riviin pythonia, jotka löytyvät nopeasti netistä</p>\r\n                <p>r = spi.xfer([1, (8+channel) &lt;&lt; 4, 0])</p>\r\n                <p>adcOut = ((r[1]\\&amp;3) &lt;&lt; 8) +r[2]</p>\r\n                <p>Yhdistettynä mcp3008 datasheettiin<Image src={datasheet} size='huge' floated='right' /></p>\r\n                <p>nähdään, että ensimmäinen rivi vastaa datasheetilla Mcu transmitted dataa ja received data tulee 10 bitillä.</p>\r\n                <p>Siten ykkösellä aloitetaan transfer, kanava valitaan siirtämällä valittu kanava tavun vasempaan laitaan ja lopuksi vielä lähetetään jotakin, jotta transfer pysyy käynnissä</p>\r\n                <p>SPI kirjastoa tutkiessa huomasin mm. että muistia varataan saman verran vastaanottoon kuin lähetykseen.</p>\r\n                <p>Datasheetissä näkyvät kolme vastaanotettua tavua. r[0] on merkityksetön, r[1] :stä maskataan 6 bittiä ja kerrotaan 8. Tämä lisätään tavuun r[2] ja voilá!</p>\r\n        </Segment>\r\n        )\r\n}\r\n\r\nexport default ADCRaspi","import React from 'react'\r\nimport nopeuspeli from '../../images/nopeuspeli.jpg'\r\nimport ss from '../../images/ss.JPG'\r\nimport ss1 from '../../images/ss_cont1.JPG'\r\nimport ss2 from '../../images/ss_cont2.JPG'\r\nimport { Header, Image, Segment } from 'semantic-ui-react'\r\n\r\nconst Nopeuspeli = () => {\r\n        return (\r\n                <Segment padded='very'>\r\n                <Header as=\"h1\">Nopeuspeli</Header>\r\n                <Image.Group size='medium'>\r\n                        <Image src={nopeuspeli} />\r\n                        <Image src={ss} />\r\n                </Image.Group>\r\n                        <Header as=\"h3\">Speden Speleistä tuttu nopeutta vaativa peli. Itse tehtynä tietenkin. Kolmen tonnin haaste!!</Header>\r\n                <Image.Group size='large'>\r\n                        <Image src={ss1} />\r\n                        <Image src={ss2} />\r\n                </Image.Group>\r\n                <p>\r\n                Projektissa tutustuin PICAXEn kehitysalustaan, \r\n        tavoitteena oli tehdä BASICilla peli. PICAXE on opetustarkoitukseen \r\n        kehitetty alusta hyvin rajallisilla ominaisuuksilla. \r\n        Aloitus on kuitenkin helppoa ja graafinen ohjelmointikin onnistuu.\r\n        Tässä projektissa haasteita olivat mm. rajalliset \r\n        muistipaikat(muistaakseni 24 tavua muistia, jokainen erikseen \r\n                valmiiksi osoitettu) ja estetty/ei-mahdollinen pääsy \r\n                timer interrupteihin.\r\n                Pysyvää muistia eli eepromia käytetään\r\n                highscoren tallennukseen. Teknisesti lamppujen paloaika ja \r\n                samanaikainen näppäinten kuuntelu tapahtuu PICAXEn \r\n                pseudomoniajon ja external-interruptien yhdistelmällä.\r\n                <br/>\r\n                <br/>\r\n                Näin vuosien jälkeen on toki karmeaa katsoa koodia.\r\n                Kertoo hyvin siitä, miksi kirjoitetun koodin tulisi olla\r\n                hyvin dokumentoitua ja selkeää. Projekti oli kuitenkin todella\r\n                haasteellinen ja sen toimimaan saaminen oli kyllä välillä\r\n                työn ja tuskan takana. Yllättävän vaikeaa oli saada toimimaan\r\n                esimerkiksi sellainen ominaisuus, että peli loppuu, mikäli\r\n                pelaaja ei paina mitään nappia. Vastaavasti pelaaja voi antaa\r\n                pari eteen ja vasta sittenruveta painelemaan.\r\n                </p>\r\n                <p>\r\n                        Koodista on olemassa useita eri versioita, \r\n                        jossain vaiheessa lisäilin vielä PWM:llä\r\n                        pelin mittaan kirkastuvia ledejä.\r\n                        Sisällä on luultavasti tämä <a href=\"https://github.com/aapokar/SpedenSpeli_Picaxe_basic\">koodi</a>.\r\n                </p>\r\n                </Segment>\r\n        )\r\n}\r\n\r\nexport default Nopeuspeli\r\n\r\n\r\n        // codeUrl: \"\",\r\n","import React from 'react'\r\nimport mearm from '../../images/mearm.jpg'\r\nimport mearmon from '../../images/mearm_on.JPG'\r\nimport mearmcontent from '../../images/mearm_contents.JPG'\r\nimport { Header, Image, Segment } from 'semantic-ui-react'\r\n\r\nconst Mearm = () => {\r\n    return (\r\n    <Segment padded='very'>\r\n        <Header as=\"h1\">Mearm DIY</Header>\r\n        <Image.Group size='medium'>\r\n            <Image src={mearm} />\r\n            <Image src={mearmon} />\r\n            <Image src={mearmcontent} />\r\n        </Image.Group>\r\n        <Header as=\"h3\">MeArmista tehty versio AtMega328P-sirulla 2mm opaalin värisestä akryylista.</Header>\r\n        <p>\r\n        Alun perin suunnittelin hexapodia, mutta päädyin omaan versioon \r\nMeArmista. Molemmista, hexapodista että mearmista, löytyy monenlaista\r\ntoteutusta. En nähnyt mielekkäänä kopioida valmiita piirustuksia, \r\nvaan itseasiassa punainen lanka olikin itse piirrellä Vertexillä \r\nosat ja miettiä miten rakenne saadaan toimimaan. Liitostavat ja \r\njoitakin yksityiskohtia toki katsoin suoraan valmiista malleista, \r\nmutta mitat ja muodot piirsin kaikki itse. Monissa valmiissa toteutuksissa runko \r\nnäyttäisi olevan kiinnitetty suoraan servon roottoriin kiinni, itse \r\npäädyin sorvaamaan alustan alumiinista ja kiinnittämään sen isoon laakeriin.\r\nServon kiinnitit laakerin alle alumiinikeskiöön, sisäkuvassa näkyy servon\r\nsivusuuntainen lukitus muovilevyllä tappeihin. Kotelo on muuten jyrsitty\r\nMDF-kakusta CNC:llä. \r\nOhjelman kehitysvaiheessa tutkin mahdollisuuksia puhelimella ohjaukseen ja \r\nlopulta päädyin käyttämään valmista ratkaisua (Ardudroid, linkki lopussa).\r\nTuossa koodissa olikin jo käytännössä kaikki virheentunnistusta myöten valmiina,\r\n muutamat yksityiskohdat (kuten portit) piti asettaa sopivaksi tähän projektiin. \r\n Olisi ollut melkoinen työmaa lähteä itse siinä vaiheessa opiskelemaan \r\n Android-ohjelmointia. Kuvissa näkyy, että en käyttänyt Arduinon valmiita boardeja, \r\n vaan tein itse AtMega328P:lle piirilevyn. Käytännössä kyseessä on siis \r\n kuitenkin Arduinon tekniikka, itse tehtynä, ilman ylimääräisiä development \r\n boardin komponentteja. \r\n Tila loppui kotelosta kesken, joten piirilevy piti \r\n jakaa kahteen osaan.<br/>\r\n </p>\r\n <h4><i>Lopputulos</i></h4>\r\n <p>\r\n Iso ongelma tuli kun kasasin rungon, sillä pienet \r\n kiinanservot hyytyivät painon alla. Tai ilmeisesti virtaa ei riittänyt \r\n pitää haarukkaa ääriasennossa, vaan mikropiiri rupesi boottailemaan \r\n jännitteen laskettua n. 4,5V. Paikkasin tilannetta lisäämällä tietokoneen \r\n muuntajan virtalähteeksi kovimmassa rasituksessa oleville servoille, väliin \r\n tosin tarvitsi säädettävän muuntajan. Tämä sähköongelma jäi lopulta ratkaisematta,\r\n sillä oskilloskoopin käyttö ei silloin onnistunut. Servojen käyttövirta oli\r\n muistaakseni luvattu ~400mA, mutta yleismittarin piikkinä kävi yli 800mA.\r\n Harmillisesti tämä projekti jäi viimeistelemättä. Siihen aikaan hain töitä\r\n syksyksi ja kesäksi, viimeistelin muita opintoja ja gradua, tein matematiikan\r\n sijaisuutta, pelasin ja tuomaroin salibandya...\r\n        </p>\r\n        <p>Koodina sovelsin <a href=\"http://www.techbitar.com/ardudroid-simple-bluetooth-control-for-arduino-and-android.html\">tätä</a>.</p>\r\n    </Segment>\r\n    )\r\n}\r\n\r\nexport default Mearm\r\n\r\n","import React from 'react'\r\nimport { Header, Image, Segment } from 'semantic-ui-react'\r\nimport polo0 from '../../images/polo0.JPG'\r\nimport polo1 from '../../images/polo1.JPG'\r\n\r\n\r\nconst Lukko = () => {\r\n\r\nreturn (\r\n    <Segment padded='very'>\r\n        <Header as=\"h1\">2003 Polon lukon vaihto</Header>\r\n        <Header as=\"h3\">Repsikan puolen takaoven lukkopesän vaihto.</Header>\r\n        <Image src={polo0} size='medium' floated='left'/>\r\n        <p>Takaoven lukko alkuun temppuili niin, että avaamiseen \r\n            ovet piti \"avata kaksi kertaa\". Kovin kestävä ratkaisu tämä\r\n            ei ollut, ja varsinkin lämpötilan laskiessa ei ovi lähtenyt enää\r\n            auki.</p>\r\n        <p>Merkkiliikkeestä ilmoitettiin, ettei lukkopesää löydy\r\n            bulkkivaraosana vaan on pakko ottaa merkkiosa, ovh 240€.\r\n            Saksasta tilattuna lukkopesä taisi maksaa n. 55€.\r\n        </p>\r\n        <p>\r\n            Verhoiluiden irrottaminen ei taaskaan ollut mitään lystiä.\r\n            Todellisuushan ei vastannut videota, mutta idea oli kuitenkin sama.\r\n            Manuaalissa ja videolla on verhoilun pohjassa ruuvi, tässä Polossa\r\n            ei verhoilun ruuveja ollut muualla kuin sisäkahvassa.\r\n            Alhaalta klipsien irroituksen aloitus, lopuksi paneeli nostetaan ylöspäin.\r\n        </p>\r\n        <Image src={polo1} size='medium' floated='right'/>\r\n        <p>\r\n            Ikkunan kiinnikkeen kanssa oli omat haasteensa, lähinnä sen takaisin \r\n            laittaminen. Irtikopautus onnistui nätisti, ja lasi teipattiin yläasentoon\r\n            työskentelyn ajaksi.\r\n        </p>\r\n        <p>\r\n            Lukkopesä tulee nätisti pellin mukana pois, paikalleen laittaminen olikin\r\n            oma hommansa. Lukkopesä kiinnitetään peltiverhoiluun\r\n            ja puolisokkona sihdataan paikalleen omaan ahtaaseen rakoonsa. Itse\r\n            jouduin vähän kopauttamaan että upposi.\r\n        </p>\r\n        <p>\r\n            Onni takaovessa oli, ettei siellä ollut sähköikkunaa.\r\n            Sähköikkunan mekanismi olisi tuonut omat hankaluutensa-\r\n        </p>\r\n        \r\n        <p>Suuntaa antava <a href=\"https://www.youtube.com/watch?v=ScYiNu2W0Lw\">video</a> aiheesta.</p>\r\n    </Segment>\r\n)\r\n\r\n}\r\n\r\nexport default Lukko","import React from 'react'\r\nimport { Header, Image, Segment } from 'semantic-ui-react'\r\nimport laatikosto from '../../images/laatikosto.JPG'\r\n\r\n\r\nconst Laatikosto = () => {\r\n\r\nreturn (\r\n    <Segment padded='very'>\r\n        <Image src={laatikosto} size='medium' floated='left'/>\r\n        <Header as=\"h1\">Laatikosto eteiseen</Header>\r\n        <Header as=\"h3\">Eteiseen mittatyönä tehty laatikosto/kenkäteline</Header>\r\n\r\n        <p>Uuteen asuntoon muuttaessa 2016 tarvittiin uusia huonekaluja.\r\n            Ongelma tässä uudessa asunnossa oli ensinnäkin se, että tarkoitus \r\n            on asua vain muutaman vuoden, sekä tietenkin erikoiset mitat.\r\n        </p>\r\n        <p>\r\n            Tietyille mitoille ostetut huonekalut eivät välttämättä sovi\r\n            kovin hyvin seuraavaan asuntoon ja isännällä oli sopivasti\r\n            virtaa ylimääräisenä. Ajatuksena oli tehdä eteiseen säilytystaso,\r\n            muutama laatikko ja sain myös ylipuhuttua laatikoston alaosaan\r\n            lisätilaa kengille, jotka eivät meinanneet mahtua kuvassa näkyvään\r\n            peilikaappiin.\r\n        </p>\r\n        <p>\r\n            Ajatuksena oli tehdä omaperäistä muotoilua, jossa on vielä vähän \r\n            \"luontoa jäljellä\", niinkuin sanotaan. Tässä tapauksessa laatikoston\r\n            runkoon käytin vanhaa koivulankkua, jonka särmäämättömät pinnat\r\n            saisivat jäädä selvästi näkyviin. Koivulankku oli tietysti kuivaa kuin\r\n            alkoholistin kurkku Saharassa. Meinasin kesken kaiken tehdä koko homman\r\n            uusiksi, sillä höylätessä lankut tietenkin suoristumisen sijaan\r\n            käyristyivät milloin mitenkin. Sovitukset kanteen ja välipohjaan\r\n            tein jyrsimellä ja tapeilla. Kierojen lankkujen ansiosta kesällä joku\r\n            laatikko saattaa vähän kanittaa...\r\n        </p>\r\n        <p>\r\n            Muotoilun puolesta oppi oli kovaa. Näin jälkikäteen katsottuna\r\n            tuote saattaa olla hiukan \"overengineered\", sillä kun kerroin\r\n            tuttavalleni joka oli käymässä että tuo on minun tekemä, kysymys\r\n            kuului: \"Ai nuo molemmat??\"\r\n            Muotoilussa tässäkin tapauksessa vähemmän olisi saattanut olla enemmän,\r\n            mutta ainakin tuote toimii siinä mihin se on tarkoitettu!\r\n        </p>\r\n        \r\n    </Segment>\r\n)\r\n\r\n}\r\n\r\nexport default Laatikosto","import React from 'react'\r\nimport { Header, Image, Segment } from 'semantic-ui-react'\r\nimport taso from '../../images/taso.JPG'\r\nimport keittio from '../../images/keittio.JPG'\r\n\r\n\r\nconst Taso = () => {\r\n\r\nreturn (\r\n    <Segment padded='very'>\r\n        <Header as=\"h1\">Keittiön tasollinen kaappi.</Header>\r\n        <Header as=\"h3\">Keittiöön lasku- ja säilytystilaa, tee se itse tietenkin.</Header>\r\n        <Image src={taso} size='medium' floated='left'/>\r\n        <p>Muutettuamme juuri remontoituun vuokra-asuntoon tuli\r\n            tarve eteisen laatikoston lisäksi saada lasku- ja\r\n            säilytystilaa keittiöön. Tason pitäisi olla mittaan tehty\r\n            ja sopia muuhun kalustukseen.</p>\r\n        <p>No mikäs sen parempaa kuin itse lähteä kyseistä projektia\r\n            suunnittelemaan. Materiaalina on ylijäämätavaraa: Runkona mm.\r\n            pystyviiluparkettia, olisiko ollut Saima-mallistoa. Aika\r\n            raskas runko tuli, mutta saipahan nurkissa\r\n            pyörinyttä tavaraa pois varastoista.\r\n        </p>\r\n        <p>\r\n           Suunnittelussa katsottiin halutut mitat ja mietittiin sopivuus\r\n           kiinteisiin kalusteisiin. Maalin värin valinta oli yllättävän vaikea,\r\n           vaikka kannoimme maaliliikkeestä värikortteja useampaankin otteeseen.\r\n           Eri valossa pinta näytti aina eriltä ja valkoisia sävyjähän oli \r\n           tietysti kymmenittäin. Lopulta pintamaalin väri saatiin päätettyä ja\r\n           muilla tasoilla näkyvää pintaa lähdettiin imitoimaan DC-FIXillä.\r\n        </p>\r\n        <Image src={keittio} size='medium' floated='right'/>\r\n        <p>\r\n            Tämä projekti meni silloin ammattitaidon kehittämisestä. Samalla\r\n            tuli tutustuttua paremmin tarkistussahaan (eli sirkkeliin) joka\r\n            konesalista löytyi. Katkaisuohjain oli noin 1,5 astetta vinossa...\r\n            Suoristamiseen menikin sitten yksi iltapäivä hyvin rattoisasti.\r\n        </p>\r\n        <p>\r\n            DC-FIX tuntuu hyvin kestävän käyttöä ja kulutusta keittiön tason pintana.\r\n            Voin suositella! Paikalleen asentaminenkin sujuun näppärästi,\r\n            kun pala on leikattu siististi mittaan ja kulmat suunniteltu hyvin.\r\n            Sulkaa kun ei ollut niin paineltiin kirjalla kuplat pois.\r\n        </p>\r\n        <p>\r\n            Aivan samanlaisia vetimiä, pintaa tai maalia ei tietenkään löytynyt\r\n            kuin mitä kiinteissä kalusteissa on käytetty. Pulverimaalaus on\r\n            tietenkin aina erinäköinen kuin telalla maalattu. Taso sopii varsin hyvin\r\n            keittiöön, onhan se mittaan tehty, ja sävyerot häipyvät näkyvistä\r\n            koska taso on eri puolella keittiötä kuin kiinteät kalusteet.\r\n        </p>\r\n        \r\n    </Segment>\r\n)\r\n\r\n}\r\n\r\nexport default Taso","import React from 'react'\r\nimport nopeuspeli from '../images/nopeuspeli.jpg'\r\nimport mcp from '../images/mcp3008.jpg'\r\nimport polo0 from '../images/polo0.JPG'\r\nimport myarm from '../images/mearm.jpg'\r\nimport wp from '../images/wp.jpg'\r\nimport laatikosto from '../images/laatikosto.JPG'\r\nimport taso from '../images/taso.JPG'\r\n\r\nimport Ennustin from './projectComponents/Ennustin'\r\nimport ADCRaspi from './projectComponents/ADCRaspi'\r\nimport Nopeuspeli from './projectComponents/Nopeuspeli'\r\nimport Mearm from './projectComponents/Mearm'\r\nimport Lukko from './projectComponents/Lukko'\r\nimport Laatikosto from './projectComponents/Laatikosto'\r\nimport Taso from './projectComponents/Taso'\r\n\r\nconst projectsList =  \r\n\r\n    [{\r\n            id: \"1\",\r\n            name: \"Nopeuspeli\",\r\n            description: \"Speden Speleistä tuttu nopeutta vaativa peli.\",\r\n            img: nopeuspeli,\r\n            codeUrl: \"https://github.com/aapokar/SpedenSpeli_Picaxe_basic\",\r\n            content: \"Projektissa tutustuin PICAXEn kehitysalustaan, tavoitteena oli tehdä BASICilla peli. PICAXE on opetustarkoitukseen kehitetty alusta hyvin rajallisilla ominaisuuksilla. Tässä projektissa haasteita olivat mm. rajalliset muistipaikat(muistaakseni 8 tavua muistia, jokainen erikseen valmiiksi osoitettu) ja estetty/ei-mahdollinen pääsy timer interrupteihin. Teknisesti lamppujen paloaika ja samanaikainen näppäinten kuuntelu tapahtuu PICAXEn pseudomoniajon ja external-interruptien yhdistelmällä.\",\r\n            url: \"/projects/1\"\r\n        },\r\n        {\r\n            id: \"2\",\r\n            name: \"MeArm\",\r\n            description: \"MeArmista tehty versio AtMega328P-sirulla 2mm akryylista.\",\r\n            img: myarm,\r\n            codeUrl: \"http://www.techbitar.com/ardudroid-simple-bluetooth-control-for-arduino-and-android.html\",\r\n            content: \"Alun perin suunnittelin hexapodia, mutta päädyin omaan versioon MeArmista. En nähnyt mielekkäänä kopioida valmiita piirustuksia, vaan itseasiassa punainen lanka olikin itse piirrellä Vertexillä osat ja miettiä miten rakenne saadaan toimimaan. Liitostavat ja joitakin yksityiskohtia toki katsoin suoraan valmiista malleista, mutta mitat ja muodot piirsin kaikki itse. Monissa valmiissa runko näyttäisi olevan kiinnitetty suoraan servon roottoriin kiinni, itse päädyin sorvaamaan alustan alumiinista ja kiinnittämään sen isoon laakeriin. Ohjelman kehitysvaiheessa tutkin mahdollisuuksia puhelimella ohjaukseen ja lopulta päädyin käyttämäänä suht valmista ratkaisua (Ardudroid, linkki lopussa). Tuossa koodissa olikin jo käytännössä kaikki virheentunnistusta myöten valmiina, muutamat yksityiskohdat piti asettaa sopivaksi tähän projektiin. Olisi ollut melkoinen työmaa lähteä itse siinä vaiheessa opiskelemaan Android-ohjelmointia. Kuvissa näkyy, että en käyttänyt Arduinon runkoa, vaan tein itse AtMega328P:lle piirilevyn. Käytännössä kyseessä on siis kuitenkin Arduinon tekniikka, itse tehtynä, ilman ylimääräisiä development boardin komponentteja. Tila loppui kotelosta kesken, joten piirilevy piti jakaa kahteen osaan. Iso ongelma tuli kun kasasin rungon, sillä pienet kiinanservot hyytyivät painon alla. Tai itse asiassa virtaa ei riittänyt pitää haarukkaa ääriasennossa, vaan mikropiiri rupesi boottailemaan jännitteen laskettua n. 4,5V. Paikkasin tilannetta lisäämällä tietokoneen muuntajan virtalähteeksi kovimmassa rasituksessa oleville servoille, väliin tosin tarvitsi säädettävän muuntajan.\",\r\n            url: \"/projects/2\"\r\n        },\r\n        {\r\n            id: \"3\",\r\n            name: \"Lämpötilaennustin\",\r\n            description: \"Iot-kurssilla toteutettu Arduino MKR1000-projekti.\",\r\n            img: wp,\r\n            codeUrl: \"https://github.com/aapokar/weatherPredicter_Arduino\",\r\n            content: \"Tässä projektissa Arduino hakee tietoa Openweathermapin APIsta ja lähettää itse mittaamansa sekä OWM-datan Googlen Firebaseen. Tässä projektissa otin ensiaskeleet sekä APIen käyttöön että asynkroniseen javascriptiin. jChart piirteli tyhjää kaaviota, joten päädyin vanhanaikaiseen XHMR-pyyntöjen käyttöön. Nyttemmin toki olen tutustunut enemmän async/awaitiin. Mielenkiintoista oli myös saada yksittäisinä lähetetyt tiedot näkymään Firebasessa listana. Firebasen Realtime Databasessa (RTDB) oli kokeilun jälkeen ominaisuus, että mikäli nimi/arvoparissa nimet ovat järjestyksessä lukuja nollasta eteenpäin, tulkitsee RTDB tiedon listana. Siten indeksoimalla pystyi Arduinolta lähettämään tietoa, joka RTDB:ssä näkyy listana.\",\r\n            url: \"/projects/3\"\r\n        },\r\n        {\r\n            id: \"4\",\r\n            name: \"ADC-RasPi\",\r\n            description: \"IoT-projektina analog-to-digital-convertterin kautta liitetty sensori RasPiin.\",\r\n            img: mcp,\r\n            codeUrl: null,\r\n            content: \"ADC MCP3008 toimintaan tutustumista koulun IoT-kurssilla. Dashboard ja backend olivat vaihtareiden käsialaa, itse postasin Raspilta Pythonilla dataa backendin APIlle. Mielenkiintoisin osuus oli tutkia koodia, jolla Raspi spi.dev kirjaston kautta lukee dataa ADC:lta. SPI-yhteyden toiminta oli c-koodia em. kirjastossa. Kryptinen koodinpätkä johtui ensinnäkin 10bittisestä tiedonsiirrosta, sekä siitä että lukeakseen Masterin oli myös kirjoitettava, vaikka sitten tyhjää jos ei muuta...\",\r\n            url: \"/projects/4\"\r\n        },\r\n        {\r\n            id: \"5\",\r\n            name: \"Lukon vaihto\",\r\n            description: \"2003 Polo takaoven lukon vaihto\",\r\n            img: polo0,\r\n            codeUrl: null,\r\n            content: \"Kävipä niin, että hyvin palvelleesta Polosta alkoi repsikan puolen takaovi jäämään lukkoon. Lukon vaihto oli päivän homma.\",\r\n            url: \"/projects/5\"\r\n        },\r\n        {\r\n            id: \"6\",\r\n            name: \"Eteisen laatikosto\",\r\n            description: \"Eteiseen laatikosto ja lisätilaa kengille.\",\r\n            img: laatikosto,\r\n            codeUrl: null,\r\n            content: \"Laatikosto.\",\r\n            url: \"/projects/6\"\r\n        },\r\n        {\r\n            id: \"7\",\r\n            name: \"Keittiön taso\",\r\n            description: \"Keittiön kalustoon sopiva taso ja kaappi.\",\r\n            img: taso,\r\n            codeUrl: null,\r\n            content: \"Laatikosto.\",\r\n            url: \"/projects/7\"\r\n        }\r\n    ]\r\n\r\n\r\nexport const selector = (id) => {\r\n    switch(id) {\r\n        case \"1\":\r\n            return <Nopeuspeli />\r\n        case \"2\":\r\n            return <Mearm />\r\n        case \"3\":\r\n            return <Ennustin />\r\n        case \"4\":\r\n            return <ADCRaspi />\r\n        case \"5\":\r\n            return <Lukko />\r\n        case \"6\":\r\n            return <Laatikosto />\r\n        case \"7\":\r\n            return <Taso />\r\n        default:\r\n            return null\r\n    }\r\n     \r\n}\r\n\r\nexport default projectsList","import React, {useState} from 'react'\r\nimport {Menu, Icon} from 'semantic-ui-react'\r\n// eslint-disable-next-line\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\n\r\nconst TopMenu = () => {\r\n    const [activeItem, setActiveItem] = useState('')\r\n\r\n    const handleItemClick = (e) => {\r\n        setActiveItem(e)\r\n    }\r\n\r\n    return (\r\n    <Menu stackable fluid widths={5}>\r\n        <Menu.Item\r\n            as={Link}\r\n            to=\"/\"\r\n            active={activeItem === 'home'}\r\n            onClick={() =>handleItemClick('home')}\r\n        >\r\n                <Icon name='home' />\r\n        </Menu.Item>\r\n        <Menu.Item \r\n            as={Link}\r\n            to=\"/kuka\"\r\n            active={activeItem === 'kuka'}\r\n            onClick={() =>handleItemClick('kuka')}\r\n        >Kuka</Menu.Item>\r\n        <Menu.Item \r\n            as={Link}\r\n            to=\"/projektit\"\r\n            active={activeItem === 'projektit'}\r\n            onClick={() =>handleItemClick('projektit')}\r\n        >Projektit</Menu.Item>\r\n        <Menu.Item \r\n            as={Link}\r\n            to=\"/joke\"\r\n            active={activeItem === 'joke'}\r\n            onClick={() =>handleItemClick('joke')}\r\n        >Viihde</Menu.Item>\r\n        <Menu.Item \r\n            as={Link}\r\n            to=\"/about\"\r\n            active={activeItem === 'about'}\r\n            onClick={() =>handleItemClick('about')}\r\n        >About</Menu.Item>\r\n</Menu>\r\n    )\r\n}\r\n\r\nexport default TopMenu","import React from 'react'\r\nimport { Header, Image, Icon } from 'semantic-ui-react'\r\nimport me from '../images/me.jpg'\r\n// eslint-disable-next-line\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\n\r\n\r\nconst Kuka = () => {\r\n    return (\r\n        <div>\r\n            <Header size='large'>Aapo Kärki</Header>\r\n            <Image src={me} size='small' rounded floated='left' />\r\n            <p>Tieto- ja viestintätekniikan opiskelija, kasvatustieteiden maisteri, luokanopettaja, teknisen työn opettaja, \r\n                urheiluhieroja.\r\n            </p>\r\n            <p>Työkokemusta mm. \r\n            Teknisen työn opettajana Lahden lähistöllä, \r\n                pienemmän paikkakunnan koulussa 3v. \r\n                Teknisen työn opettajan sijaisuuksia \r\n                useassa eri koulussa, mm. Joensuussa ja Savonlinnassa. \r\n                Kokemusta myös Fazerin karkkitehtaalta, \r\n                Amazonin keskusvarastolta(Leipzigissa), \r\n                hierojayrittäjänä franchiseketjussa. \r\n                Kesäisin mm. ollut kunnan hommissa ja keikkasiivousta L&amp;T:lla, sisältäen mm. \r\n                ikkunanpesuja ja lattioiden vahauksia. </p>\r\n            <p>Harrastuksiin aina kuulunut vahvasti salibandy ja jalkapallo. \r\n                Meriittinä hopeamitali pelaajavalmentajana Saksan salibandyn \r\n                Bundesliigasta. Suomen Cupin pikkufinaalin voitto LeBassa, \r\n                legendaarisen jalkapalloturnauksen\r\n                Leka-cupin voitto Juvalla ja Jussin tuvan katusählyn \r\n                mestaruus Pontuksella. Ja tietysti Hipan nousu Lahden Korttelin\r\n                Mestigaan salibandyssa. Nykyisin myös 2. valmentajana \r\n                SB Heinolan edustusjoukkueessa(2.div).</p>\r\n            <p>Saksassa asutun vuoden hedelminä myös kielitaitona englantia ja tietysti saksaa.</p>\r\n            <p>Jos on asiaa sivustosta/projekteista tai haluat vaikka tarjota töitä, email on muotoa etunimi.sukunimi ja päätteenä student.lab.fi</p>\r\n            <a href=\"https://www.linkedin.com/in/aapokarki\" target=\"_blank\" rel=\"noopener noreferrer\"><Icon name='linkedin' color='blue' size='huge' /></a>\r\n            <a href=\"https://github.com/aapokar\" target=\"_blank\" rel=\"noopener noreferrer\"><Icon name='github' size='huge' color='grey' /> </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Kuka","import React from 'react'\r\nimport { Card, Image, Segment } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\n// eslint-disable-next-line\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\n\r\n\r\nconst projektit = (props) => {\r\n    const mappedProjects = props.projects.map(p => \r\n        <Card as={Link} to={p.url} key={p.id}>\r\n            <Image src={p.img} wrapped ui={false} />\r\n            <Card.Content>\r\n                <Card.Header>{p.name}</Card.Header>\r\n                <Card.Description>\r\n                    {p.description}\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n        )\r\n\r\n    return (\r\n        <Segment textAlign='center' padded='very'>\r\n        <Card.Group>{mappedProjects}</Card.Group>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      projects: state.projects,\r\n    }\r\n  }\r\n  \r\nconst connectedProjektit = connect(mapStateToProps)(projektit)\r\n\r\nexport default connectedProjektit","import React from 'react'\r\nimport {Header, Icon, Segment} from 'semantic-ui-react'\r\n\r\nconst Home = (props) => {\r\n    return (\r\n        <div>\r\n        <Header as=\"h1\" icon textAlign='center'>\r\n            <Icon name='home' />\r\n            Tervetuloa kotisivuilleni!\r\n        </Header>\r\n        <Segment textAlign='center' color='grey'>\r\n            <p>Sivusto on ennen kaikkea webbiohjelmointiportfolio. \r\n                Projekteista löytyy tosin paljon muutakin!\r\n            </p>\r\n        </Segment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, {useState} from 'react'\r\nimport { List, Segment, Header, Accordion, Icon } from 'semantic-ui-react'\r\n\r\nconst About = () => {\r\n    const [activeIndex, setActiveIndex] = useState(-1)\r\n    \r\n    const handleClick = (e, titleProps) => {\r\n        const { index } = titleProps\r\n        const newIndex = activeIndex === index ? -1 : index\r\n        setActiveIndex( newIndex )\r\n      }\r\n\r\nreturn (\r\n    <div>\r\n    <h1>Tietoa sivustosta</h1>\r\n    <p>\r\n        Sivusto on rakennettu Reactilla. \r\n        Muotoilut on tehty Semantic UIn React-yhteensopivilla \r\n        komponenteilla. Semantic UI vastaa myös \r\n        responsiivisuudesta. Muita kirjastoja: Redux, \r\n        Redux-React, React-router.\r\n    </p>\r\n    <p>Backend toteutettu Nodella.</p>\r\n    <p>Viihdepuolella tarinoita(ei vitsejä) haetaan Chuck Norris-tarinoiden tietokannasta, en ole keksinyt kaikkia itse...</p>\r\n\r\n    <Accordion styled fluid>\r\n        <Accordion.Title\r\n          active={activeIndex === 0}\r\n          index={0}\r\n          onClick={handleClick}\r\n        >\r\n          <Icon name='dropdown' />\r\n          Tarkempaa tietoa sivun toteutuksesta\r\n        </Accordion.Title>\r\n        <Accordion.Content active={activeIndex === 0}>\r\n          <ul>\r\n            <li>\r\n                Reactin toiminnoista sivu käyttää useEffectiä sekä useStatea. \r\n                Statehook on esimerkiksi tällä About-sivulla avaamassa ja \r\n                sulkemassa tätä Accordionia. useEffectillä pidetään kirjaa\r\n                mm. painikepelin pisteistä ja alustetaan Chuck Norris-tarina.\r\n            </li>\r\n            <li>Redux-Reactilla saadaan reducerit yhdistettyä ja tuotua storesta\r\n                Providerilla komponenteille. Tässä appissa on omat reducerit painikepelille,\r\n                ChuckNorris-tarinalle, ilmoitukselle sekä projektien tilalle.\r\n            </li>\r\n            <li>\r\n                Projektien kuviin pitäisi saada klikattava zoomi. Lisätään kunhan\r\n                ehditään.\r\n            </li>\r\n            <li>\r\n                Koodit löytyvät tietenkin <a href=\"https://github.com/aapokar\" target=\"_blank\" rel=\"noopener noreferrer\"> githubista.<Icon name='github' size='large' color='blue' /> </a>\r\n            </li>\r\n          </ul>\r\n        </Accordion.Content>\r\n    </Accordion>\r\n\r\n    <Segment color='blue'>\r\n        <Header as=\"h1\" >Known bugs</Header>\r\n        <List>\r\n            <List.Item><List.Icon name='bug' />\r\n            <List.Content>\r\n            <List.Header>Viesti painikepelissä on toteutettu setTimeOutilla, \r\n                ei kestä nopeita klikkauksia.</List.Header>\r\n                <i>Korjattu jäämään näkyviin.</i></List.Content>\r\n            </List.Item>\r\n            <List.Item><List.Icon name='bug' />\r\n            <List.Content>\r\n            <List.Header>Reititys ei toimi \r\n                _vielä_ backendiltä frontendin polkuihin. Toimii pelkässä frontendissä.</List.Header>\r\n                <i>Korjattu reitittämään kaikki aloitussivulle.</i></List.Content>\r\n            </List.Item>\r\n        </List>\r\n    </Segment>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default About","\r\n\r\nconst notificationReducer = (state = '', action) => {\r\n\r\n  switch (action.type) {\r\n  case 'NEW_NOTIFICATION':\r\n    return action.message\r\n  case 'CLEAR':\r\n    return ''\r\n  default:\r\n    return state\r\n  }\r\n\r\n}\r\n\r\nexport const newNotification = (message) => {\r\n  return async dispatch => {\r\n    dispatch({\r\n      type: 'NEW_NOTIFICATION',\r\n      message: ''\r\n    })\r\n    await dispatch({\r\n      type: 'NEW_NOTIFICATION',\r\n      message\r\n    })\r\n    // setTimeout(() => {\r\n    //   dispatch({\r\n    //     type: 'NEW_NOTIFICATION',\r\n    //     message: ''\r\n    //   })\r\n    // },2000)\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import axios from 'axios'\r\nconst baseUrl = '/api/game'\r\n\r\nconst getStatus = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst postStatus = status => {\r\n  const request = axios.put(baseUrl, status)\r\n  return request.then(response=>response.data)\r\n}\r\n\r\nexport default { getStatus, postStatus }","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null || message==='') {\r\n    return null\r\n  }\r\n\r\n  if (message[1]==='neutral') {\r\n    return (    \r\n    <Message compact>\r\n      <Message.Header>Ei voittoa tällä kertaa.</Message.Header>\r\n      <p>\r\n        <b>Seuraavaan voittoon {message[0]} klikkausta.</b>\r\n      </p>\r\n    </Message>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <Message positive compact>\r\n    <Message.Header>Voitit juuri {message} pistettä ja ne lisättiin pistetilanteeseesi!</Message.Header>\r\n    <p>\r\n      <b>Seuraavaan voittoon 10 klikkausta.</b>\r\n    </p>\r\n  </Message>\r\n  )\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    message: state.message\r\n  }\r\n}\r\n\r\nconst ConnectedNotification = connect(mapStateToProps)(Notification)\r\n\r\nexport default ConnectedNotification","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Icon, Segment, Header, Accordion } from 'semantic-ui-react'\r\n\r\nimport {setJoke} from '../reducers/jokeReducer'\r\nimport {setStatus} from '../reducers/gameReducer'\r\nimport {newNotification} from '../reducers/notificationReducer'\r\n\r\nimport gameService from '../services/gameService'\r\n\r\nimport Notification from '../components/Notification'\r\n\r\n\r\nconst Viihde = (props) => {\r\n    const [activeIndex, setActiveIndex] = useState(-1)\r\n\r\n    const handleAccordionClick = (e, titleProps) => {\r\n      const { index } = titleProps\r\n      const newIndex = activeIndex === index ? -1 : index\r\n      setActiveIndex( newIndex )\r\n    }\r\n\r\n    const handleJokeClick = (e) => {\r\n        props.setJoke()\r\n    }\r\n\r\n    const resetGame = () => {\r\n      props.setStatus(20)\r\n    }\r\n\r\n    const handlePlay = (e) => {\r\n      const status = {\r\n        score: props.score\r\n      }\r\n      gameService.postStatus(status).then(e => {\r\n      if (e.prize) {\r\n        props.newNotification(e.prize)\r\n      } else {\r\n        props.newNotification([e.next, 'neutral'])\r\n      }\r\n      window.localStorage.setItem('scorePoints', e.score)\r\n      props.setStatus(e.score)\r\n      })\r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <Segment textAlign='center'>\r\n            <Button icon onClick={handleJokeClick}>\r\n            Paina tästä ja lisää viihtymistäsi!<br/>\r\n            <Icon name='random' loading  />\r\n            </Button>\r\n            <p>{props.joke}</p>\r\n        </Segment>\r\n        <Segment textAlign='center'>\r\n            <div>\r\n              <Header as=\"h1\">Painikepeli</Header>\r\n            {props.score===0 ?\r\n            <div>\r\n              <h2>Valitettavasti pisteesi loppuivat.</h2>\r\n            <Button onClick={resetGame}> Aloita alusta </Button>\r\n            </div> :\r\n            <Button icon onClick={handlePlay}>\r\n            Paina tästä pelataksesi!<br/>\r\n            <Icon name='wrench' loading  />\r\n            </Button>\r\n              }\r\n            <h2>Pistetilanteesi: {props.score}</h2>\r\n            <Notification />\r\n            </div>\r\n        </Segment>\r\n        <Segment raised textAlign='center'>\r\n        <Accordion styled fluid>\r\n        <Accordion.Title\r\n          active={activeIndex === 0}\r\n          index={0}\r\n          onClick={handleAccordionClick}\r\n        >\r\n        <Header as=\"h2\"><Icon name='dropdown' />Painikepelin tiedot</Header>\r\n        </Accordion.Title>\r\n        <Accordion.Content active={activeIndex === 0}>\r\n          \r\n          <Header as=\"h3\">Painikepeli on tehty seuraavan tehtävänannon perusteella.</Header>\r\n          <p>Tavoitteena on toteuttaa yksinkertainen moninpeli, \r\n            jota pelataan painamalla painiketta.\r\n            Painikkeen painaminen maksaa yhden pisteen, \r\n            joita pelaajalla on lähtötilanteessa 20.</p>\r\n\r\n          <p>Painiketta voi painaa vain, jos pelaajan pistesaldo \r\n            on positiivinen. Pelaajan painettua\r\n            painiketta hänelle ilmoitetaan mahdollisesta voitosta.</p>\r\n\r\n          <p>Pelaaja voittaa<br/>\r\n              ● 5 pistettä joka 10. painallus<br/>\r\n              ● 40 pistettä joka 100. painallus<br/>\r\n              ● 250 pistettä joka 500. painallus.<br/>\r\n          </p>\r\n          <p>Pelaaja voi voittaa enimmillään yhden palkinnon \r\n          yhdellä painalluksella. Mikäli samalla\r\n          painalluksella voittaisi yllä olevan listan mukaan \r\n          monta palkintoa, voittaa pelaaja näistä\r\n          suurimman. Painiketta painaessa pelaaja ei tiedä, \r\n          mikä laskurin nykyinen arvo on, sillä kaikki\r\n          pelaajat kasvattavat saman laskurin arvoa.</p>\r\n\r\n          <p>Kun pelaaja painaa painiketta, tapahtuu seuraavat asiat:<br/>\r\n          1. Pelaajalta vähennetään yksi piste.<br/>\r\n          2. Laskurin arvo kasvaa yhdellä.<br/>\r\n          3. Mikäli laskurin arvolle osuu palkinto (esim. laskurin arvolla 500 voittaa 250 pistettä),\r\n          ilmoitetaan tästä pelaajalle ja lisätään voitto pelaajan pistesaldoon.<br/>\r\n          4. Pelaajalle näytetään vaadittujen painallusten määrä seuraavaan voittavaan arvoon.<br/>\r\n          </p>\r\n          <p>Pelin käyttöliittymässä tulee näkyä pelaajan pistesaldo. Pelitilanteen tulee säilyä, vaikka\r\n          selaimen (mikäli selainsovellus) tai sovelluksen (mikäli mobiilisovellus) käynnistää uudelleen.\r\n          Mikäli pelaajan pistesaldo on 0, tarjotaan pelaajalle mahdollisuus aloittaa alusta, jolloin\r\n          hänen pistesaldonsa palautetaan jälleen arvoon 20.\r\n          Sovellus koostuu kahdesta osasta: käyttöliittymästä ja palvelimesta.\r\n          </p>\r\n          </Accordion.Content>\r\n          </Accordion>\r\n        </Segment>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      joke: state.joke,\r\n      score: state.score\r\n    }\r\n  }\r\n\r\n  const mapDispatchToProps = {\r\n    setJoke,\r\n    setStatus,\r\n    newNotification\r\n  }\r\n\r\nconst connectedViihde = connect(mapStateToProps, mapDispatchToProps)(Viihde)\r\n\r\nexport default connectedViihde","import React, {useEffect} from 'react';\n// eslint-disable-next-line\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport {Container} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\n\nimport { initializeProjects } from './reducers/projectsReducer'\nimport {setJoke} from './reducers/jokeReducer'\nimport {setStatus} from './reducers/gameReducer'\nimport projectsList, {selector} from './data/projects'\n\nimport TopMenu from './components/TopMenu'\nimport Kuka from './components/Kuka'\nimport Projektit from './components/Projektit'\nimport Home from './components/Home'\nimport About from './components/About'\nimport Viihde from './components/Viihde'\n\n\n\nfunction App(props) {\n\n  useEffect(() => {\n    props.initializeProjects(projectsList)\n  }, [])\n\n  useEffect(() => {\n    props.setJoke()\n  }, [])\n\n  useEffect(() => {\n    const oldScore = window.localStorage.getItem('scorePoints')\n    if (oldScore) {\n      const score = oldScore\n      props.setStatus(score)\n    } else {\n      window.localStorage.setItem('scorePoints', 20)\n      props.setStatus(20)\n    }\n  }, [])\n\n  const projectById = (id) => {\n    // return props.projects.find(a => a.id===id)\n    return selector(id)\n  }\n\n\n  return (\n    // <div>\n      <Router>\n        <Container>\n          <TopMenu />\n          <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/kuka\">\n            <Kuka />\n          </Route>\n          <Route path=\"/joke\">\n            <Viihde />\n          </Route>\n          <Route path=\"/projektit\">\n            <h1>Menneitä projekteja vuosien varrelta</h1>\n            <Projektit />\n          </Route>\n          <Route exact path=\"/projects/:id\" render={({ match }) =>\n             <div>{projectById(match.params.id)}</div>\n          } />\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n        </Container>\n      </Router>\n    // </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.projects,\n  }\n}\n\nconst mapDispatchToProps = {\n  initializeProjects,\n  setJoke,\n  setStatus\n}\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App)\n\nexport default connectedApp;\n\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport projectsReducer from './reducers/projectsReducer'\r\nimport jokeReducer from './reducers/jokeReducer'\r\nimport gameReducer from './reducers/gameReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\n\r\nconst reducer = combineReducers({\r\n  projects: projectsReducer,\r\n  message: notificationReducer,\r\n  joke: jokeReducer,\r\n  score: gameReducer\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-less/semantic.less'\nimport App from './App';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <Provider store={ store }>\n    <App />\n  </Provider>,\n document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/nopeuspeli.f667b80d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mcp3008.7a2a0e96.jpg\";","module.exports = __webpack_public_path__ + \"static/media/polo0.02fc54d1.JPG\";","module.exports = __webpack_public_path__ + \"static/media/mearm.b643eb11.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wp.246fdb28.jpg\";","module.exports = __webpack_public_path__ + \"static/media/laatikosto.450a5003.JPG\";","module.exports = __webpack_public_path__ + \"static/media/taso.212fcec9.JPG\";"],"sourceRoot":""}